{
  "stats": {
    "suites": 4,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-05T05:54:04.379Z",
    "end": "2024-10-05T05:54:06.910Z",
    "duration": 2531,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "deaa7bbd-95e3-4d6e-8d96-a5d0f8bd7882",
      "title": "",
      "fullFile": "cypress\\trello\\trello.cy.js",
      "file": "cypress\\trello\\trello.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ea2c1dfb-8109-422c-9438-6de4571bf1a8",
          "title": "Trello API CRUD Operations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "70a53b74-e54c-432c-9e1e-40b3fa833990",
              "title": "Board CRUD Operations",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new Trello board",
                  "fullTitle": "Trello API CRUD Operations Board CRUD Operations Create a new Trello board",
                  "timedOut": null,
                  "duration": 632,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"POST\",\n  url: `${baseURL}/1/boards`,\n  qs: {\n    name: \"My first board\",\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  const res = response.body;\n  boardId = res.id;\n  expect(response.status).to.eql(200);\n  cy.log(`Board created with ID: ${boardId}`);\n});",
                  "err": {},
                  "uuid": "37d594a6-1075-4d39-84b2-e1db1586b418",
                  "parentUUID": "70a53b74-e54c-432c-9e1e-40b3fa833990",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Retrieve the Trello board",
                  "fullTitle": "Trello API CRUD Operations Board CRUD Operations Retrieve the Trello board",
                  "timedOut": null,
                  "duration": 74,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"GET\",\n  url: `${baseURL}/1/boards/${boardId}`,\n  qs: {\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  expect(response.body.id).to.eql(boardId);\n  cy.log(`Retrieved board with ID: ${boardId}`);\n});",
                  "err": {},
                  "uuid": "3abda205-01d5-4bad-8310-1e0b98d5a8f2",
                  "parentUUID": "70a53b74-e54c-432c-9e1e-40b3fa833990",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update the Trello board",
                  "fullTitle": "Trello API CRUD Operations Board CRUD Operations Update the Trello board",
                  "timedOut": null,
                  "duration": 77,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"PUT\",\n  url: `${baseURL}/1/boards/${boardId}`,\n  qs: {\n    name: \"Updated board name\",\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n});",
                  "err": {},
                  "uuid": "d2ce94f3-5e65-4b4e-b798-6f3e70b98ef7",
                  "parentUUID": "70a53b74-e54c-432c-9e1e-40b3fa833990",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete the Trello board",
                  "fullTitle": "Trello API CRUD Operations Board CRUD Operations Delete the Trello board",
                  "timedOut": null,
                  "duration": 59,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"DELETE\",\n  url: `${baseURL}/1/boards/${boardId}`,\n  qs: {\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log(`Deleted board with ID: ${boardId}`);\n});",
                  "err": {},
                  "uuid": "6f393752-bf28-4975-8bce-034f8fd59553",
                  "parentUUID": "70a53b74-e54c-432c-9e1e-40b3fa833990",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37d594a6-1075-4d39-84b2-e1db1586b418",
                "3abda205-01d5-4bad-8310-1e0b98d5a8f2",
                "d2ce94f3-5e65-4b4e-b798-6f3e70b98ef7",
                "6f393752-bf28-4975-8bce-034f8fd59553"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 842,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f37ee8a3-6960-407e-9abd-086895e1a020",
              "title": "List CRUD Operations",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new list on the board",
                  "fullTitle": "Trello API CRUD Operations List CRUD Operations Create a new list on the board",
                  "timedOut": null,
                  "duration": 88,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"POST\",\n  url: `${baseURL}/1/lists`,\n  qs: {\n    name: \"To Do\",\n    idBoard: boardId,\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  listId = response.body.id;\n  expect(response.status).to.eql(200);\n  cy.log(`List created with ID: ${listId}`);\n});",
                  "err": {},
                  "uuid": "70ba07b0-5397-4d3b-84be-e0239c859a9f",
                  "parentUUID": "f37ee8a3-6960-407e-9abd-086895e1a020",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Retrieve the list",
                  "fullTitle": "Trello API CRUD Operations List CRUD Operations Retrieve the list",
                  "timedOut": null,
                  "duration": 54,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"GET\",\n  url: `${baseURL}/1/lists/${listId}`,\n  qs: {\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log(`Retrieved list with ID: ${listId}`);\n});",
                  "err": {},
                  "uuid": "908cfe52-755a-4421-afaa-5660c9b35485",
                  "parentUUID": "f37ee8a3-6960-407e-9abd-086895e1a020",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update the list name",
                  "fullTitle": "Trello API CRUD Operations List CRUD Operations Update the list name",
                  "timedOut": null,
                  "duration": 149,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"PUT\",\n  url: `${baseURL}/1/lists/${listId}`,\n  qs: {\n    name: \"In Progress\",\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log(`Updated list name to: \"In Progress\"`);\n});",
                  "err": {},
                  "uuid": "b3edc455-1bed-4f2c-a6f2-de1a0c48468a",
                  "parentUUID": "f37ee8a3-6960-407e-9abd-086895e1a020",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Archive the list",
                  "fullTitle": "Trello API CRUD Operations List CRUD Operations Archive the list",
                  "timedOut": null,
                  "duration": 125,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"PUT\",\n  url: `${baseURL}/1/lists/${listId}/closed`,\n  qs: {\n    value: true,\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log(`Archived list with ID: ${listId}`);\n});",
                  "err": {},
                  "uuid": "85c8a1d6-0a0d-4c18-832e-98317634be00",
                  "parentUUID": "f37ee8a3-6960-407e-9abd-086895e1a020",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70ba07b0-5397-4d3b-84be-e0239c859a9f",
                "908cfe52-755a-4421-afaa-5660c9b35485",
                "b3edc455-1bed-4f2c-a6f2-de1a0c48468a",
                "85c8a1d6-0a0d-4c18-832e-98317634be00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 416,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b13f2003-dd9f-4b26-a32e-18a6973bfd76",
              "title": "Card CRUD Operations",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create a new card in the list",
                  "fullTitle": "Trello API CRUD Operations Card CRUD Operations Create a new card in the list",
                  "timedOut": null,
                  "duration": 217,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"POST\",\n  url: `${baseURL}/1/cards`,\n  qs: {\n    name: \"Task 1\",\n    idList: listId,\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  cardId = response.body.id;\n  expect(response.status).to.eql(200);\n  cy.log(`Card created with ID: ${cardId}`);\n});",
                  "err": {},
                  "uuid": "a99b9e52-42ae-4987-ba37-795e2dc38cc5",
                  "parentUUID": "b13f2003-dd9f-4b26-a32e-18a6973bfd76",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Retrieve the card",
                  "fullTitle": "Trello API CRUD Operations Card CRUD Operations Retrieve the card",
                  "timedOut": null,
                  "duration": 74,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"GET\",\n  url: `${baseURL}/1/cards/${cardId}`,\n  qs: {\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log(`Retrieved card with ID: ${cardId}`);\n});",
                  "err": {},
                  "uuid": "44011982-fea9-4772-93fa-fcf7d7cc702f",
                  "parentUUID": "b13f2003-dd9f-4b26-a32e-18a6973bfd76",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Update the card name",
                  "fullTitle": "Trello API CRUD Operations Card CRUD Operations Update the card name",
                  "timedOut": null,
                  "duration": 204,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"PUT\",\n  url: `${baseURL}/1/cards/${cardId}`,\n  qs: {\n    name: \"Updated Task 1\",\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log(`Updated card name to: \"Updated Task 1\"`);\n});",
                  "err": {},
                  "uuid": "09154cb9-f3f2-4910-a9d7-632cce909e7f",
                  "parentUUID": "b13f2003-dd9f-4b26-a32e-18a6973bfd76",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete the card",
                  "fullTitle": "Trello API CRUD Operations Card CRUD Operations Delete the card",
                  "timedOut": null,
                  "duration": 149,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: \"DELETE\",\n  url: `${baseURL}/1/cards/${cardId}`,\n  qs: {\n    key: apiKey,\n    token: apiToken\n  }\n}).then(response => {\n  expect(response.status).to.eql(200);\n  cy.log(`Deleted card with ID: ${cardId}`);\n});",
                  "err": {},
                  "uuid": "d59616d2-8a85-4ed9-93ba-429132572a53",
                  "parentUUID": "b13f2003-dd9f-4b26-a32e-18a6973bfd76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a99b9e52-42ae-4987-ba37-795e2dc38cc5",
                "44011982-fea9-4772-93fa-fcf7d7cc702f",
                "09154cb9-f3f2-4910-a9d7-632cce909e7f",
                "d59616d2-8a85-4ed9-93ba-429132572a53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 644,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}